<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.askme.app.mapper.AnswerMapper">
  <resultMap id="BaseResultMap" type="com.askme.app.model.Answer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="like" jdbcType="INTEGER" property="like" />
    <result column="is_accept" jdbcType="BIT" property="isAccept" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, question_id, user_id, answer, like, is_accept, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from answer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from answer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.askme.app.model.Answer">
    insert into answer (id, question_id, user_id, 
      answer, like, is_accept, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{answer,jdbcType=VARCHAR}, #{like,jdbcType=INTEGER}, #{isAccept,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.askme.app.model.Answer">
    insert into answer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="like != null">
        like,
      </if>
      <if test="isAccept != null">
        is_accept,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="like != null">
        #{like,jdbcType=INTEGER},
      </if>
      <if test="isAccept != null">
        #{isAccept,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.askme.app.model.Answer">
    update answer
    <set>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="like != null">
        like = #{like,jdbcType=INTEGER},
      </if>
      <if test="isAccept != null">
        is_accept = #{isAccept,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.askme.app.model.Answer">
    update answer
    set question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      answer = #{answer,jdbcType=VARCHAR},
      like = #{like,jdbcType=INTEGER},
      is_accept = #{isAccept,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>